{"version":3,"sources":["constants.js","images/Dcard_Favicon_x520.png","components/Header/index.js","components/Spinner/index.js","tools/index.js","hooks/index.js","api/index.js","api/motcAPI.js","components/ScenicSpots/index.js","routes.js","components/Main/index.js","App.js","reportWebVitals.js","index.js"],"names":["CITYS","Taipei","NewTaipei","Taoyuan","Taichung","Tainan","Kaohsiung","Keelung","Hsinchu","HsinchuCounty","MiaoliCounty","ChanghuaCounty","NantouCounty","YunlinCounty","ChiayiCounty","Chiayi","PingtungCounty","YilanCounty","HualienCounty","TaitungCounty","KinmenCounty","PenghuCounty","LienchiangCounty","Header","url","useRouteMatch","Navbar","bg","expand","sticky","Brand","href","src","Logo","alt","className","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Object","entries","map","i","cityEnName","cityZhName","Item","Spinner","center","size","relativeCenter","wrapperIndicator","classIndicator","objToURLParams","obj","reduce","prev","key","val","useOnScrollToBottom","handler","useEffect","listener","windowHeight","window","innerHeight","document","documentElement","offsetHeight","docHeight","Math","max","body","scrollHeight","clientHeight","pageYOffset","isBottom","addEventListener","removeEventListener","api","instance","axios","create","fire","a","options","API_HOST","process","REACT_APP_API_HOST","request","headers","Authorization","sessionStorage","getItem","catch","error","motcAPI","urlParams","method","city","ScenicSpots","useParams","useState","spotDatas","setSpotDatas","renewCount","setRenewCount","showSpinner","setShowSpinner","getScenicSpotDatas","useCallback","params","$top","$skip","getCityScenicSpots","getAllScenicSpots","data","prevSpotDatas","console","Table","spot","Name","Description","DescriptionDetail","ROUTES","path","exact","component","App","Container","route","render","routeProps","routes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7635076e.chunk.js","sourcesContent":["export const CITYS = {\n  Taipei: '臺北市',\n  NewTaipei: '新北市',\n  Taoyuan: '桃園市',\n  Taichung: '臺中市',\n  Tainan: '臺南市',\n  Kaohsiung: '高雄市',\n  Keelung: '基隆市',\n  Hsinchu: '新竹市',\n  HsinchuCounty: '新竹縣',\n  MiaoliCounty: '苗栗縣',\n  ChanghuaCounty: '彰化縣',\n  NantouCounty: '南投縣',\n  YunlinCounty: '雲林縣',\n  ChiayiCounty: '嘉義縣',\n  Chiayi: '嘉義市',\n  PingtungCounty: '屏東縣',\n  YilanCounty: '宜蘭縣',\n  HualienCounty: '花蓮縣',\n  TaitungCounty: '臺東縣',\n  KinmenCounty: '金門縣',\n  PenghuCounty: '澎湖縣',\n  LienchiangCounty: '連江縣',\n};\n\nexport const SPOTS_PER_RENEW = 30;\n","export default __webpack_public_path__ + \"static/media/Dcard_Favicon_x520.80306699.png\";","import React from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\n\nimport { CITYS } from '../../constants';\n\nimport './index.scss';\nimport Logo from '../../images/Dcard_Favicon_x520.png';\n\nexport default function Header() {\n  const { url } = useRouteMatch();\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n      <Navbar.Brand href=\"/\">\n        <img src={Logo} alt=\"Logo\" className=\"header-logo\" />{' '}\n        <b>2021 Web Frontend Intern Homework</b>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"navbar-nav\" />\n      <Navbar.Collapse id=\"navbar-nav\">\n        <Nav>\n          <Nav.Link href={`${url}/scenicSpot`}>全部景點</Nav.Link>\n          <NavDropdown title=\"各縣市景點\" id=\"navbar-citys\">\n            {Object.entries(CITYS).map(([cityEnName, cityZhName], i) => {\n              return (\n                <NavDropdown.Item\n                  key={i}\n                  href={`${url}/scenicSpot/${cityEnName}`}>\n                  {cityZhName}\n                </NavDropdown.Item>\n              );\n            })}\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React from 'react';\nimport './index.scss';\n\nexport default function Spinner({ center, size, relativeCenter = false }) {\n  let wrapperIndicator = 'wrapper';\n  let classIndicator = 'spinner';\n\n  if (center) {\n    wrapperIndicator = `${wrapperIndicator}_center`;\n  }\n  if (relativeCenter) {\n    wrapperIndicator = `${wrapperIndicator}_relative--center`;\n  }\n\n  if (size) {\n    classIndicator = `${classIndicator}--${size}`;\n  }\n\n  return (\n    <div className={wrapperIndicator}>\n      <div className={classIndicator} />\n    </div>\n  );\n}\n","export function objToURLParams(obj) {\n  if (typeof obj != 'object') {\n    return '';\n  }\n\n  return Object.entries(obj).reduce((prev, [key, val], i) => {\n    return prev + `${i === 0 ? '?' : '&'}${key}=${val}`;\n  }, '');\n}\n\nexport function isBottom() {\n  const windowHeight =\n    'innerHeight' in window\n      ? window.innerHeight\n      : document.documentElement.offsetHeight;\n  const docHeight = Math.max(\n    document.body.scrollHeight,\n    document.body.offsetHeight,\n    document.documentElement.clientHeight,\n    document.documentElement.scrollHeight,\n    document.documentElement.offsetHeight,\n  );\n  return windowHeight + window.pageYOffset >= docHeight;\n}\n","import { useEffect } from 'react';\nimport { isBottom } from '../tools';\n\nexport function useOnScrollToBottom(handler) {\n  useEffect(() => {\n    const listener = () => {\n      if (isBottom()) {\n        handler();\n      }\n    };\n\n    window.addEventListener('scroll', listener);\n\n    return () => {\n      window.removeEventListener('scroll', listener);\n    };\n  }, [handler]);\n}\n","import axios from 'axios';\n\nconst api = {};\n\nconst instance = axios.create();\n\napi.fire = async (options, API_HOST = process.env.REACT_APP_API_HOST) => {\n  return instance\n    .request({\n      ...options,\n      headers: {\n        Authorization: sessionStorage.getItem('authToken'),\n        ...options.headers,\n      },\n      url: `${API_HOST}${options.url}`,\n    })\n    .catch((error) => {\n      throw error;\n    });\n};\n\nexport default api;\n","import api from './index';\nimport { objToURLParams } from '../tools';\n\nconst motcAPI = {};\n\nmotcAPI.getAllScenicSpots = (urlParams = {}) => {\n  return api.fire(\n    {\n      url: `/v2/Tourism/ScenicSpot${objToURLParams(urlParams)}`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'GET',\n    },\n    process.env.REACT_APP_MOTC_API_HOST,\n  );\n};\n\nmotcAPI.getCityScenicSpots = (city, urlParams = {}) => {\n  return api.fire(\n    {\n      url: `/v2/Tourism/ScenicSpot/${city}${objToURLParams(urlParams)}`,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      method: 'GET',\n    },\n    process.env.REACT_APP_MOTC_API_HOST,\n  );\n};\n\nexport default motcAPI;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Table } from 'react-bootstrap';\n\nimport Spinner from '../Spinner';\n\nimport { useOnScrollToBottom } from '../../hooks';\nimport motcAPI from '../../api/motcAPI';\nimport { CITYS, SPOTS_PER_RENEW } from '../../constants';\n\nexport default function ScenicSpots() {\n  const { city } = useParams();\n\n  const [spotDatas, setSpotDatas] = useState([]);\n  const [renewCount, setRenewCount] = useState(0);\n  const [showSpinner, setShowSpinner] = useState(true);\n\n  const getScenicSpotDatas = useCallback(async () => {\n    const params = {\n      $top: SPOTS_PER_RENEW,\n      $skip: SPOTS_PER_RENEW * renewCount,\n    };\n\n    setShowSpinner(true);\n\n    try {\n      const { data } =\n        city in CITYS\n          ? await motcAPI.getCityScenicSpots(city, params)\n          : await motcAPI.getAllScenicSpots(params);\n      setShowSpinner(false);\n      setSpotDatas((prevSpotDatas) => [...prevSpotDatas, ...data]);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [city, renewCount]);\n\n  useEffect(() => {\n    getScenicSpotDatas();\n  }, [getScenicSpotDatas]);\n\n  useOnScrollToBottom(() => {\n    setRenewCount(renewCount + 1);\n  });\n\n  return (\n    <>\n      <Table>\n        <thead>\n          <tr>\n            <th>No.</th>\n            <th>景點名稱</th>\n            <th>景點特色精簡說明</th>\n          </tr>\n        </thead>\n        <tbody>\n          {spotDatas.map((spot, i) => {\n            return (\n              <tr key={i}>\n                <td>{i + 1}</td>\n                <td>\n                  <b>{spot.Name}</b>\n                </td>\n                <td>\n                  {spot.Description || spot.DescriptionDetail}\n                  {spot.Description &&\n                    spot.Description !== spot.DescriptionDetail &&\n                    '......'}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {showSpinner && <Spinner relativeCenter={true} size=\"big\" />}\n    </>\n  );\n}\n","import Main from './components/Main';\nimport ScenicSpots from './components/ScenicSpots';\n\nconst ROUTES = [\n  {\n    path: '/',\n    exact: true,\n    component: Main,\n  },\n  {\n    path: '/scenicSpot',\n    exact: true,\n    component: ScenicSpots,\n  },\n  {\n    path: '/scenicSpot/:city',\n    component: ScenicSpots,\n  },\n];\n\nexport default ROUTES;\n","import React from 'react';\n\nexport default function Main() {\n  return (\n    <div>\n      <h3>Welcome here!</h3>\n      <p>請點擊頂端的「全部景點」或「各縣市景點」來查看景點</p>\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useRouteMatch,\n} from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Header from './components/Header';\nimport ROUTES from './routes';\nimport './App.scss';\n\nexport default function App() {\n  const { url } = useRouteMatch();\n  return (\n    <Router>\n      <Switch>\n        <Container>\n          <Header />\n          {ROUTES.map((route, i) => (\n            <Route\n              key={i}\n              path={`${url}/${route.path}`}\n              exact={route.exact}\n              render={(routeProps) => (\n                <route.component routes={route.routes} {...routeProps} />\n              )}\n            />\n          ))}\n        </Container>\n      </Switch>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}